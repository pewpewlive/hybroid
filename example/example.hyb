@Environment(Level)

struct Rectangle {
    width = 0f
    
    test2 = fn (yes fixed) fixed {
        return yes
    }
    
    new(width fixed, height fixed) {
        self.width = width
        self.height = height
    }
    
    height = 0f

    fn area() fixed { 
        self.test()
        return self.width * self.height
    }

    fn test() {
        self.test2 = self.test2
        self.test2(self.test2(self.area()))
    }
}

struct Yes {
    rect: Rectangle = new Rectangle(1fx, 2fx)

    new() {

    }

    fn GetRectangle() Rectangle {
        return self.rect
    }
}

let rect = new Rectangle(10f, 10f)
let a = 1f + new Rectangle(10f, new Rectangle(5f, 2f).width).test2(2f)

let yesss = new Yes()

yesss.rect.width = 23fx
yesss.rect = rect

rect = yesss.GetRectangle()

yesss.rect.area()

rect.test2(rect.test2(1f))

env Huh as Level
// hello

let number a = 1

fn test(number param) bool, bool {
    if param < 0 {
        return true, false
    }else if param == 0 {
        return false, false
    }

    match number {
        0 => {
            return false, false
        }
    }

    return true, true
}

let uh = fn() fixed {
    return 1f
}

struct StructTest {
    fixed field1 = 0f

    new(fixed param) {
        if param == 0f {
            field1 = 100f
        }else {
            self.field1 = 9d
        }
    }

    fn foo(bool param, number param2) bool, bool {
        return match param {
            true => test(param2)
            _ => {
                yield true, true
            }
        }
    }
}
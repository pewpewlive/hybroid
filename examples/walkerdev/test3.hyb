env Test3 as Level

// use Pewpew

// pub entity SuperInertiac {
//   fixed x, y = 0f, 0f
//   fixed velX, velY = 0f, 0f
//   fixed acceleration = 2f
//   fixed dashSpeed = 2f

//   number hitCooldownTimer

//   number dashCooldown
//   number dashPraparationTimer
//   bool isPreparingDash

//   number health = 70

//   fixed radius = 25f

//   spawn(fixed x, fixed y) {

//   }

//   destroy() {

//   }

//   fn Bounce(entity e, fixed intensity) {
//     if IsEntityAlive(e) {
//       fixed sX, sY = GetEntityPosition(e) 
//       fixed dX, dY = Normalize(x - sX, y - sY)
//       velX, velY += dX * intensity, dY * intensity
//     }
//   }
// }

// enum ParamType {
//     Squared,
//     Rooted,
//     Linear
// }

// alias Parameter = struct{number x, y, ParamType pt}
// alias Parameters = list<Parameter>

// pub fn ParametricInvLerp(number a, b, v, Parameters parameters) {
//     for i, v in parameters {
//     }    
// }

// pub entity Ship {
//   let entity id
//   let Camera cam = new Camera()

//   spawn(fixed x, y) {
//   }

//   destroy() {

//   }

//   Update() {
//     if !IsEntityAlive(id) {
//       return
//     }
//     cam.shipX, cam.shipY = GetEntityPosition(id) 
//     cam.Update()
//   }
// }

let a = 1 % asdiaydliahs
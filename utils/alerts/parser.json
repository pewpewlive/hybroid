[
  {
    "name": "ExpectedEnclosingMark",
    "type": "Error",
    "display_type": "Multiline",
    "params": {
      "Mark": "string"
    },
    "message": "Expected '%s'",
    "message_format": ["Mark"]
  },
  {
    "name": "ExpectedOpeningMark",
    "type": "Error",
    "display_type": "Singleline",
    "params": {
      "Mark": "string"
    },
    "message": "Expected '%s'",
    "message_format": ["Mark"]
  },
  {
    "name": "ExpectedEnvironment",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected environment statement",
    "note": "environment statement has to be the first statement in any hybroid file. example: env HelloWorld as Level"
  },
  {
    "name": "ExpectedIdentifier",
    "type": "Error",
    "params": {
      "Context": "string `default:\"\"\"\"`"
    },
    "display_type": "Singleline",
    "message": "Expected identifier",
    "note": "%s",
    "note_format":["Context"]
  },
  {
    "name": "ExpectedType",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected type",
    "note": "this needs to be declared with a type. example: number %s",
    "note_format": ["Specifier.GetTokens()[0].Lexeme"]
  },
  {
    "name": "ExpectedExpression",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected expression"
  },
  {
    "name": "ExpectedExpressionOrBody",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected expression or body"
  },
  {
    "name": "ExpectedReturnArrow",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected a return arrow (->)",
    "note": "return types on function declarations are written after a thin arrow (->) after the parameters"
  },
  {
    "name": "ExpectedCallArgs",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected call arguments"
  },
  {
    "name": "InvalidCall",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Invalid expression to call"
  },
  {
    "name": "InvalidEnvironmentType",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected 'Level', 'Mesh' or 'Sound' as environment type"
  },
  {
    "name": "ExpectedCallAfterMacroSymbol",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected an expression call after '@'"
  },
  {
    "name": "ForbiddenTypeInEnvironment",
    "type": "Error",
    "display_type": "Singleline",
    "params":{
      "Type":  "string",
      "Envs": "[]string"
    },
    "message": "Cannot have a %s in the following environments: %v",
    "message_format": ["Type", "Envs"],
    "note": ""
  },
  {
    "name": "ExpectedFieldDeclaration",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected field declaration inside struct"
  },
  {
    "name": "EmptyWrappedType",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Wrapped types must not be empty"
  },
  {
    "name": "ExpectedStatement",
    "type": "Error",
    "display_type": "Singleline",
    "message": "Expected statement"
  }
]

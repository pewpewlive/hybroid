// Code generated by "stringer -type=TokenType -linecomment"; DO NOT EDIT.

package tokens

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Hash-0]
	_ = x[LeftParen-1]
	_ = x[RightParen-2]
	_ = x[LeftBrace-3]
	_ = x[RightBrace-4]
	_ = x[LeftBracket-5]
	_ = x[RightBracket-6]
	_ = x[Comma-7]
	_ = x[Colon-8]
	_ = x[Dot-9]
	_ = x[Concat-10]
	_ = x[Ellipsis-11]
	_ = x[Minus-12]
	_ = x[MinusEqual-13]
	_ = x[Plus-14]
	_ = x[PlusEqual-15]
	_ = x[Slash-16]
	_ = x[SlashEqual-17]
	_ = x[BackSlash-18]
	_ = x[BackSlashEqual-19]
	_ = x[Star-20]
	_ = x[StarEqual-21]
	_ = x[Caret-22]
	_ = x[CaretEqual-23]
	_ = x[Bang-24]
	_ = x[BangEqual-25]
	_ = x[Equal-26]
	_ = x[EqualEqual-27]
	_ = x[FatArrow-28]
	_ = x[ThinArrow-29]
	_ = x[Greater-30]
	_ = x[GreaterEqual-31]
	_ = x[Less-32]
	_ = x[LessEqual-33]
	_ = x[Modulo-34]
	_ = x[ModuloEqual-35]
	_ = x[Degree-36]
	_ = x[Fixed-37]
	_ = x[FixedPoint-38]
	_ = x[Identifier-39]
	_ = x[Number-40]
	_ = x[Radian-41]
	_ = x[String-42]
	_ = x[Is-43]
	_ = x[Isnt-44]
	_ = x[Alias-45]
	_ = x[And-46]
	_ = x[As-47]
	_ = x[Break-48]
	_ = x[By-49]
	_ = x[Const-50]
	_ = x[Continue-51]
	_ = x[Else-52]
	_ = x[Entity-53]
	_ = x[Enum-54]
	_ = x[Env-55]
	_ = x[False-56]
	_ = x[Fn-57]
	_ = x[For-58]
	_ = x[If-59]
	_ = x[In-60]
	_ = x[From-61]
	_ = x[To-62]
	_ = x[Let-63]
	_ = x[Match-64]
	_ = x[New-65]
	_ = x[Or-66]
	_ = x[Pub-67]
	_ = x[Repeat-68]
	_ = x[Return-69]
	_ = x[Self-70]
	_ = x[Spawn-71]
	_ = x[Struct-72]
	_ = x[Class-73]
	_ = x[Tick-74]
	_ = x[True-75]
	_ = x[Use-76]
	_ = x[While-77]
	_ = x[With-78]
	_ = x[Yield-79]
	_ = x[Destroy-80]
	_ = x[Eof-81]
}

const _TokenType_name = "#(){}[],:......--=++=//=\\\\=**=^^=!!=====>->>>=<<=%%=degreefixedfixedPointidentifiernumberradianstringisisntaliasandasbreakbyconstcontinueelseentityenumenvfalsefnforifinfromtoletmatchneworpubrepeatreturnselfspawnstructclassticktrueusewhilewithyielddestroyEOF (End of File)"

var _TokenType_index = [...]uint16{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 37, 39, 41, 43, 44, 46, 47, 49, 50, 52, 58, 63, 73, 83, 89, 95, 101, 103, 107, 112, 115, 117, 122, 124, 129, 137, 141, 147, 151, 154, 159, 161, 164, 166, 168, 172, 174, 177, 182, 185, 187, 190, 196, 202, 206, 211, 217, 222, 226, 230, 233, 238, 242, 247, 254, 271}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}

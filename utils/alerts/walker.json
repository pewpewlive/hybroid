[
  {
    "name": "ForbiddenTypeInEnvironment",
    "type": "Error",
    "params": {
      "Type": "string",
      "Envs": "[]string"
    },
    "message": "cannot have a %s in the following environments: %s",
    "message_format": ["Type", { "Envs": "strings.Join({}, \", \")" }]
  },
  {
    "name": "InvalidEnvironmentType",
    "type": "Error",
    "params": {
      "GivenType": "string"
    },
    "message": "'%s' is not a valid environment type",
    "message_format": ["GivenType"],
    "note": "environment type can be 'Level', 'Mesh' or 'Sound'"
  },
  {
    "name": "EnvironmentRedaclaration",
    "type": "Error",
    "message": "cannot redeclare an environment"
  },
  {
    "name": "ExpectedEnvironment",
    "type": "Error",
    "message": "expected environment declaration",
    "note": "the first declaration in any Hybroid file has to be an environment declaration"
  },
  {
    "name": "DuplicateEnvironmentNames",
    "type": "Error",
    "params": {
      "Path1": "string",
      "Path2": "string"
    },
    "message": "duplicate environment names found between '%s' and '%s'",
    "message_format": ["Path1", "Path2"]
  },
  {
    "name": "InvalidAccessValue",
    "type": "Error",
    "params": {
      "ValueType": "string"
    },
    "message": "value is of type '%s', so it cannot be accessed from",
    "message_format": ["ValueType"],
    "note": "only lists, maps, classes, entities, structs and enums can be used to access values from"
  },
  {
    "name": "FieldAccessOnListOrMap",
    "type": "Error",
    "params": {
      "Field": "string",
      "AccessType": "string"
    },
    "message": "cannot access field '%s' from the %s",
    "message_format": ["Field", "AccessType"],
    "note": "to access a value from a %s you use brackets, e.g. example[%s]",
    "note_format": ["AccessType", "Field"]
  },
  {
    "name": "MemberAccessOnNonListOrMap",
    "type": "Error",
    "params": {
      "Member": "string",
      "AccessType": "string"
    },
    "message": "cannot access member '[%s]' from the %s",
    "message_format": ["Member", "AccessType"],
    "note": "to access a value you use a dot and then an identifier, e.g. example.identifier"
  },
  {
    "name": "InvalidMemberIndex",
    "type": "Error",
    "params": {
      "AccessType": "string",
      "Index": "string"
    },
    "message": "'%s' is not of type number to be an index for the %s",
    "message_format": ["Index", "AccessType"],
    "note": "for lists, an index (number) is used to access values, for maps, a key (text) is used"
  },
  {
    "name": "InvalidField",
    "type": "Error",
    "params": {
      "AccessType": "string",
      "FieldName": "string"
    },
    "message": "field '%s' does not belong to the '%s'",
    "message_format": ["FieldName", "AccessType"]
  },
  {
    "name": "MixedMapOrListContents",
    "type": "Error",
    "params": {
      "ContainerType": "string",
      "Type1": "string",
      "Type2": "string"
    },
    "message": "a %s's members must be the same type (found types: '%s' and '%s')",
    "message_format": ["ContainerType", "Type1", "Type2"]
  },
  {
    "name": "DuplicateKeyInMap",
    "type": "Error",
    "message": "found duplicate key in map"
  },
  {
    "name": "InvalidCallerType",
    "type": "Error",
    "params": {
      "Type": "string"
    },
    "message": "caller is not a function (type found: '%s')",
    "message_format": ["Type"]
  },
  {
    "name": "MethodOrFieldNotFound",
    "type": "Error",
    "params": {
      "Name": "string"
    },
    "message": "no method or field named '%s'",
    "message_format": ["Name"]
  },
  {
    "name": "ForeignLocalVariableAccess",
    "type": "Error",
    "params": {
      "Name": "string"
    },
    "message": "cannot access local variable '%s' belonging to a different environment",
    "message_format": ["Name"]
  },
  {
    "name": "InvalidArgumentType",
    "type": "Error",
    "params": {
      "GivenType": "string",
      "ExpectedType": "string"
    },
    "message": "argument was of type %s, but should be %s",
    "message_format": ["GivenType", "ExpectedType"]
  },
  {
    "name": "PublicDeclarationInLocalScope",
    "type": "Error",
    "message": "cannot have a public declaration that is in a local scope"
  },
  {
    "name": "Redeclaration",
    "type": "Error",
    "params": {
      "VarName": "string",
      "DeclType": "string"
    },
    "message": "a %s named '%s' already exists",
    "message_format": ["DeclType", "VarName"]
  },
  {
    "name": "UnnecessaryTypeInConstDeclaration",
    "type": "Error",
    "message": "an explicit type is not necessary for a const declaration"
  },
  {
    "name": "NoValueGivenForConstant",
    "type": "Error",
    "message": "constant must be declared with a value"
  },
  {
    "name": "TooFewValuesInDeclaration",
    "type": "Error",
    "params": {
      "RequiredAmount": "int"
    },
    "message": "%d more value(s) required in variable declaration",
    "message_format": ["RequiredAmount"]
  },
  {
    "name": "ExplicitTypeRequiredInDeclaration",
    "type": "Error",
    "message": "a variable declared without a value requires an explicit type"
  },
  {
    "name": "ExplicitTypeMismatch",
    "type": "Error",
    "params":{
      "ExplicitType": "string",
      "ValueType": "string"
    },
    "message": "variable was given explicit type '%s', but its value is a '%s'",
    "message_format": ["ExplicitType", "ValueType"]
  },
  {
    "name": "ExplicitTypeNotAllowed",
    "type": "Error",
    "params":{
      "ExplicitType": "string"
    },
    "message": "cannot create a default value from the explicit type '%s'",
    "message_format": ["ExplicitType"],
    "note": "some types don't have default values, like entities and classes"
  },
  {
    "name": "TooManyValuesInDeclaration",
    "type": "Error",
    "params": {
      "ExtraAmount": "int"
    },
    "message": "%d less value(s) required in variable declaration",
    "message_format": ["ExtraAmount"]
  },
  {
    "name": "ImportCycle",
    "type": "Error",
    "params": {
      "HybPath1": "string",
      "HybPath2": "string"
    },
    "message": "",
    "message_format": ["HybPath1", "HybPath1"]
  },
  {
    "name": "UndeclaredVariableAccess",
    "type": "Error",
    "params": {
      "Var": "string"
    },
    "message": "'%s' is not a declared variable",
    "message_format": ["Var"]
  }
]

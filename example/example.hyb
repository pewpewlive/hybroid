env Huh as Level
// hello

// let number a = 1

fn test(number param) bool, bool {
    // if param < 0 {
    //     return true, false
    // }else if param == 0 {
    //     return false, false
    // }

    // match param {
    //     0 => {
    //         return false, false
    //     }
    // }

    if true {
        if false {
            return false, true
        }else {
        }
    }else {
        return true, true
    }

    repeat 10 with i {
        if true {
            continue
        }else {
            return true, false
        }
        continue
    }

    return true, true
}

let uh = fn() fixed {
    return 1f
}

let tesst = struct{
    number Field1 = 10
    Field2 = true
}

fn anonStructTest(struct{number Field1, bool Field2} uh) bool {
    if uh.Field1 == 10 {
        return false
    }
    return true
} 

anonStructTest(tesst)

struct StructTest {
    fixed field1 = 0f

    new(fixed param) {
        if param == 0f {
            field1 = 100f
        }else {
            self.field1 = 9d
        }
    }

    fn foo(bool param, number param2) bool, bool {
        return match param {
            true => test(param2)
            _ => {
                yield true, true
            }
        }
    }
}

let p = new StructTest(10f)

p.field1 = 1f

let b, a = p.foo(true, 1)
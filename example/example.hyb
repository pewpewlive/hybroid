@Environment(Level)

/*
pub struct Test {
    x = 0fx

    new() {
        self.x = 10fx

        if 1 + 1 {
            if true {

            }
        }
    }

}

let aa = new Test()


let testa = {
    a:fn(param text) bool {
        if param == "aa" {
            return true
        }else {
            return false
        }
    } 
}

fn ah(param bool) {
    param = true
}

ah(testa["a"]("aa"))
*/
/*
let dfs = fn () {
    if true {

    }
}
*/
struct Rectangle {
    
    test = {a: {b: {c: 1}}}
    xdsd = 23f
    test2 = {a: {b: {c: 1}}}
    /*thing = fn () {
        if true {
            
        }
    }*/
    
    
    new(widthasdasd fixed, heigh fixed) {
        self.test["a"]["b"]["c"] = 1
        self.xd() 
        self.xdsd = 231d
        self.test2["a"]["b"]["c"] = 1 // generate
    } 

    fn test2tiyu() {//test defined multiple times, wait keep it, lets see if compiler detects
        
    } // ima check the lua file 

    fn xd() { 
        //self.yes()
    } // anyway let me test ssmth

    fn yes() { 
        //self.xd()
    } // ok
}
